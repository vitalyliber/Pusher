<div class="container mx-auto px-6 lg:px-0">
  <div class="max-w-5xl mx-auto bg-gray-50 py-10 rounded-sm px-5">
    <% if mobile_access %>
      <%= form_with url: notifications_path, method: :post, class: "space-y-6" do %>
        <div class="space-y-4">
          <label class="font-semibold block">
            Data
          </label>
          <div id="jsoneditor" class="w-full h-64"></div>
          <textarea id="data" placeholder="Data" name="notification[data]" class="w-full px-4 py-3 rounded hidden"></textarea>
          <div class="text-xs text-gray-500">
          </div>
        </div>
        <div class="space-y-4">
          <label class="font-semibold block">
            External Key
          </label>
          <input
            data-controller="input-persister"
            data-action="input->input-persister#save"
            placeholder="External Key"
            class="w-full px-4 py-3 rounded"
            name="notification[external_key]"
            value=""/>
            <div class="text-xs text-gray-500">
              Use only the Unique User Identifier. This field is not accept the push notification token.
            </div>
          </div>
          <div class="space-y-4">
            <label class="font-semibold block">
              Topic
            </label>
            <input
              data-controller="input-persister"
              data-action="input->input-persister#save"
              placeholder="Topic"
              class="w-full px-4 py-3 rounded"
              name="notification[topic]"
              value=""/>
              <div class="text-xs text-gray-500">
                You will send messages to all users who subscribed to the topic.
              </div>
            </div>
            <button class="btn btn-neutral" type="submit">
              Send to a chosen user
            </button>
          <% end %>
        <% else %>
          <p class="text-center text-gray-500">
            Please log in to continue
          </p>
        <% end %>
      </div>
    </div>
    <script>
      const container = document.getElementById("jsoneditor")
      const hiddenInput = document.getElementById('data');
      const options = {
        onChangeText: function (jsonString) {
        try {
          hiddenInput.value = jsonString;
        } catch (e) {
          console.error('Invalid JSON:', e);
          hiddenInput.value = '';
        }
        }
      }
      const editor = new JSONEditor(container, options)

      const initialJson = {
        notification: {
          title: "Hey",
          body:":)",
        },
        data: {
          "key1": "value1",
          "key2": "value2"
        }
      }
      editor.set(initialJson)

      hiddenInput.value = JSON.stringify(initialJson);
    </script>